/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type {
  AccountRulesProxy,
  AccountRulesProxyInterface,
} from "../AccountRulesProxy";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "target",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "gasPrice",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "gasLimit",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "payload",
        type: "bytes",
      },
    ],
    name: "transactionAllowed",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

export class AccountRulesProxy__factory {
  static readonly abi = _abi;
  static createInterface(): AccountRulesProxyInterface {
    return new Interface(_abi) as AccountRulesProxyInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): AccountRulesProxy {
    return new Contract(address, _abi, runner) as unknown as AccountRulesProxy;
  }
}
