/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type { NodeRulesV2, NodeRulesV2Interface } from "../NodeRulesV2";

const _abi = [
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "enodeHigh",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "enodeLow",
        type: "bytes32",
      },
    ],
    name: "DuplicateNode",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "string",
        name: "message",
        type: "string",
      },
    ],
    name: "InactiveAccount",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "enodeHigh",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "enodeLow",
        type: "bytes32",
      },
    ],
    name: "InactiveNode",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "message",
        type: "string",
      },
    ],
    name: "InvalidArgument",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "orgId",
        type: "uint256",
      },
    ],
    name: "InvalidOrganization",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "message",
        type: "string",
      },
    ],
    name: "InvalidState",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "enodeHigh",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "enodeLow",
        type: "bytes32",
      },
    ],
    name: "NodeNotFound",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "enodeHigh",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "enodeLow",
        type: "bytes32",
      },
    ],
    name: "NotLocalNode",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "enodeHigh",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "enodeLow",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "orgId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "enum NodeRulesV2.NodeType",
        name: "nodeType",
        type: "uint8",
      },
      {
        indexed: false,
        internalType: "string",
        name: "name",
        type: "string",
      },
    ],
    name: "NodeAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "enodeHigh",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "enodeLow",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "orgId",
        type: "uint256",
      },
    ],
    name: "NodeDeleted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "enodeHigh",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "enodeLow",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "orgId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "active",
        type: "bool",
      },
    ],
    name: "NodeStatusUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "enodeHigh",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "enodeLow",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "orgId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "enum NodeRulesV2.NodeType",
        name: "nodeType",
        type: "uint8",
      },
      {
        indexed: false,
        internalType: "string",
        name: "name",
        type: "string",
      },
    ],
    name: "NodeUpdated",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "enodeHigh",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "enodeLow",
        type: "bytes32",
      },
      {
        internalType: "enum NodeRulesV2.NodeType",
        name: "nodeType",
        type: "uint8",
      },
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
    ],
    name: "addLocalNode",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "enodeHigh",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "enodeLow",
        type: "bytes32",
      },
      {
        internalType: "enum NodeRulesV2.NodeType",
        name: "nodeType",
        type: "uint8",
      },
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "orgId",
        type: "uint256",
      },
    ],
    name: "addNode",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "sourceEnodeHigh",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "sourceEnodeLow",
        type: "bytes32",
      },
      {
        internalType: "bytes16",
        name: "sourceEnodeIp",
        type: "bytes16",
      },
      {
        internalType: "uint16",
        name: "sourceEnodePort",
        type: "uint16",
      },
      {
        internalType: "bytes32",
        name: "destinationEnodeHigh",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "destinationEnodeLow",
        type: "bytes32",
      },
      {
        internalType: "bytes16",
        name: "destinationEnodeIp",
        type: "bytes16",
      },
      {
        internalType: "uint16",
        name: "destinationEnodePort",
        type: "uint16",
      },
    ],
    name: "connectionAllowed",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "enodeHigh",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "enodeLow",
        type: "bytes32",
      },
    ],
    name: "deleteLocalNode",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "enodeHigh",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "enodeLow",
        type: "bytes32",
      },
    ],
    name: "deleteNode",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "enodeHigh",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "enodeLow",
        type: "bytes32",
      },
    ],
    name: "getNode",
    outputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "enodeHigh",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "enodeLow",
            type: "bytes32",
          },
          {
            internalType: "enum NodeRulesV2.NodeType",
            name: "nodeType",
            type: "uint8",
          },
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "orgId",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "active",
            type: "bool",
          },
        ],
        internalType: "struct NodeRulesV2.NodeData",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "pageNumber",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "pageSize",
        type: "uint256",
      },
    ],
    name: "getNodes",
    outputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "enodeHigh",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "enodeLow",
            type: "bytes32",
          },
          {
            internalType: "enum NodeRulesV2.NodeType",
            name: "nodeType",
            type: "uint8",
          },
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "orgId",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "active",
            type: "bool",
          },
        ],
        internalType: "struct NodeRulesV2.NodeData[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "orgId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "pageNumber",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "pageSize",
        type: "uint256",
      },
    ],
    name: "getNodesByOrg",
    outputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "enodeHigh",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "enodeLow",
            type: "bytes32",
          },
          {
            internalType: "enum NodeRulesV2.NodeType",
            name: "nodeType",
            type: "uint8",
          },
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "orgId",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "active",
            type: "bool",
          },
        ],
        internalType: "struct NodeRulesV2.NodeData[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getNumberOfNodes",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "orgId",
        type: "uint256",
      },
    ],
    name: "getNumberOfNodesByOrg",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "enodeHigh",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "enodeLow",
        type: "bytes32",
      },
    ],
    name: "isNodeActive",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "enodeHigh",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "enodeLow",
        type: "bytes32",
      },
      {
        internalType: "enum NodeRulesV2.NodeType",
        name: "nodeType",
        type: "uint8",
      },
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
    ],
    name: "updateLocalNode",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "enodeHigh",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "enodeLow",
        type: "bytes32",
      },
      {
        internalType: "bool",
        name: "active",
        type: "bool",
      },
    ],
    name: "updateLocalNodeStatus",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

export class NodeRulesV2__factory {
  static readonly abi = _abi;
  static createInterface(): NodeRulesV2Interface {
    return new Interface(_abi) as NodeRulesV2Interface;
  }
  static connect(address: string, runner?: ContractRunner | null): NodeRulesV2 {
    return new Contract(address, _abi, runner) as unknown as NodeRulesV2;
  }
}
